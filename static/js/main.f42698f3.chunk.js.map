{"version":3,"sources":["atoms/Screens.ts","assets/iamformegusto.png","atoms/Palette.ts","components/MainIntroComponent.tsx","pages/MainIntroPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FullScreen","styled","div","Palette","ShowHalf","keyframes","ShowFull","Container","HideBlock","ShowTitleBlock","TitleBlock","props","custom","css","showTitle","ImageBlock","keyFrames","MainIntroComponent","refImageBlock","useRef","refTitleBlock","useState","aniImgBlock","setAniImgBlock","aniTitleBlock","setAniTitleBlock","setShowTitle","imgEventListener","useCallback","titleEventListenr","useEffect","current","addEventListener","removeEventListener","ref","style","color","fontFamily","src","iamformegusto","alt","MainIntroPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEA,IAAMA,EAAaC,IAAOC,IAAV,KCFD,MAA0B,0CCa1BC,EAbC,CACZ,CACI,OACA,OACA,OACA,OACA,OACA,OACA,OACA,S,sxDCiER,IAAMC,EAAWC,YAAH,KAURC,EAAWD,YAAH,KAURE,EAAYN,IAAOC,IAAV,IAOSC,EAAQ,GAAG,IAO7BK,EAAYH,YAAH,KAUTI,EAAiBJ,YAAH,KAedK,EAAaT,IAAOC,IAAV,KAIV,SAAAS,GAAK,OAAgC,OAA3BA,EAAMC,OAAOP,WAAuBQ,YAApC,IACqBF,EAAMC,OAAOP,cAI/B,SAAAM,GAAK,OAAIA,EAAMC,OAAOE,UAAY,QAAU,UAWzDC,EAAad,IAAOC,IAAV,IAQQC,EAAQ,GAAG,IAI7B,SAAAQ,GAAK,OAAIE,YAAJ,IAC0BF,EAAMC,OAAOI,cASnCC,EAzKf,WACI,IAAMC,EAAgBC,iBAAuB,MACvCC,EAAgBD,iBAAuB,MAFnB,EAGYE,mBAAoBjB,GAHhC,mBAGnBkB,EAHmB,KAGNC,EAHM,OAIgBF,mBAA2B,MAJ3C,mBAInBG,EAJmB,KAIJC,EAJI,OAKQJ,oBAAkB,GAL1B,mBAKnBP,EALmB,KAKRY,EALQ,KAOpBC,EAAmBC,uBAAY,WAC9BN,IAAgBlB,EACfmB,EAAef,GACTc,IAAgBd,EACtBe,EAAejB,GACTgB,IAAgBhB,GACtBmB,EAAiBhB,KAEtB,CAACa,IAEEO,EAAoBD,uBAAY,WAClCF,GAAa,KACd,IAgBH,OAdAI,qBAAU,WASN,OARGZ,EAAca,SACbb,EAAca,QAAQC,iBAAiB,eAAgBL,GAGxDP,EAAcW,SACbX,EAAcW,QAAQC,iBAAiB,eAAgBH,GAGpD,WAAO,IAAD,EACT,UAAAX,EAAca,eAAd,SAAuBE,oBAAoB,eAAgBN,MAEhE,CAACA,EAAkBE,IAEf,cAAC7B,EAAD,UACH,eAACO,EAAD,WACI,eAACG,EAAD,CAAYwB,IAAKd,EACbR,OAAQ,CACJP,UAAWmB,EACXV,UAAWA,GAHnB,UAMI,qBAAIqB,MAAO,CACPC,MAAOjC,EAAQ,GAAG,GAClBkC,WAAY,4BAFhB,mBAIU,uBAJV,gCAOA,qBAAIF,MAAO,CACPC,MAAOjC,EAAQ,GAAG,GAClBkC,WAAY,8BAFhB,4CAIU,uBAJV,kEAQJ,cAACtB,EAAD,CAAYmB,IAAKhB,EACbN,OAAQ,CACJI,UAAWM,GAFnB,SAII,qBAAKgB,IAAKC,EAAeC,IAAI,iCC3D9BC,MANf,WACI,OACI,cAAC,EAAD,KCEOC,MAJf,WACE,OAAO,cAAC,EAAD,KCUMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f42698f3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst FullScreen = styled.div`\n    width: 100vw;\n    height: 100vh;\n`;\n\nexport {\n    FullScreen\n}","export default __webpack_public_path__ + \"static/media/iamformegusto.cc8896dd.png\";","const Palette = [\n    [\n        \"#000\", // 0\n        \"#333\", // 1\n        \"#666\", // 2\n        \"#999\", // 3\n        \"#BBB\", // 4\n        \"#CCC\", // 5\n        \"#DDD\", // 6\n        \"#FFF\" // 7\n    ]\n];\n\nexport default Palette;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FullScreen } from '../atoms/Screens';\nimport iamformegusto from '../assets/iamformegusto.png';\nimport styled, { css, Keyframes, keyframes } from 'styled-components';\nimport Palette from '../atoms/Palette';\n\nfunction MainIntroComponent() {\n    const refImageBlock = useRef<HTMLDivElement>(null);\n    const refTitleBlock = useRef<HTMLDivElement>(null);\n    const [aniImgBlock, setAniImgBlock] = useState<Keyframes>(ShowHalf);\n    const [aniTitleBlock, setAniTitleBlock] = useState<Keyframes | null>(null);\n    const [showTitle, setShowTitle] = useState<boolean>(false);\n\n    const imgEventListener = useCallback(() => {\n        if(aniImgBlock === ShowHalf) {\n            setAniImgBlock(HideBlock);\n        } else if(aniImgBlock === HideBlock) {\n            setAniImgBlock(ShowFull);\n        } else if(aniImgBlock === ShowFull) {\n            setAniTitleBlock(ShowTitleBlock);\n        }\n    }, [aniImgBlock]);\n\n    const titleEventListenr = useCallback(() => {\n        setShowTitle(true);\n    }, []);\n\n    useEffect(() => {\n        if(refImageBlock.current) {\n            refImageBlock.current.addEventListener('animationend', imgEventListener);\n        }\n\n        if(refTitleBlock.current) {\n            refTitleBlock.current.addEventListener('animationend', titleEventListenr)\n        }\n\n        return () => {\n            refImageBlock.current?.removeEventListener('animationend', imgEventListener);\n        }\n    }, [imgEventListener, titleEventListenr]); \n\n    return <FullScreen>\n        <Container>\n            <TitleBlock ref={refTitleBlock}\n                custom={{\n                    keyframes: aniTitleBlock,\n                    showTitle: showTitle\n                }}\n            >\n                <h1 style={{\n                    color: Palette[0][7],\n                    fontFamily: \"'Montserrat', sans-serif\"\n                }}>\n                    Hello.<br/>\n                    I am developer formegusto.\n                </h1>\n                <h1 style={{\n                    color: Palette[0][7],\n                    fontFamily: \"'Noto Sans KR', sans-serif\"\n                }}>\n                    안녕하세요.<br/>\n                    개발자 노태헌 입니다.\n                </h1>\n            </TitleBlock>\n            <ImageBlock ref={refImageBlock} \n                custom={{\n                    keyFrames: aniImgBlock\n                }}>\n                <img src={iamformegusto} alt=\"hello, iamformegusto\" />\n            </ImageBlock>\n        </Container>\n    </FullScreen>\n}\n\nconst ShowHalf = keyframes`\n    from {\n        width: 0;\n        height: 0;\n    } to {\n        width: 100px;\n        height: 100px;\n    }\n`;\n\nconst ShowFull = keyframes`\n    from {\n        width: 0;\n        height: 0;\n    } to {\n        width: 500px;\n        height: 500px;\n    }\n`;\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 100%;\n\n    background-color: ${Palette[0][0]};\n\n    & > div:not(:last-child) {\n        margin-right: 2rem;\n    }\n`;\n\nconst HideBlock = keyframes`\n    from {\n        width: 100px;\n        height: 100px;\n    } to {\n        width: 0;\n        height: 0;\n    }\n`;\n\nconst ShowTitleBlock = keyframes`\n    from {\n        width: 0;\n        height: 0;\n    } to {\n        width: 500px;\n        height: 500px;\n    }\n`;\n\ntype TitleBlockStyleProps = {\n    keyframes?: Keyframes | null;\n    showTitle?: boolean;\n}\n\nconst TitleBlock = styled.div<{custom: TitleBlockStyleProps}>`\n    width: 0;\n    height: 0;\n\n    ${props => (props.custom.keyframes !== null) && css`\n        animation: .7s ease-in-out ${props.custom.keyframes} forwards;\n    `}\n\n    & > h1 {\n        display: ${props => props.custom.showTitle ? 'block' : 'none'};\n\n        font-size: 1.5rem;\n        font-weight: 100;\n    }\n`\n\ntype ImageBlockStyleProps = {\n    keyFrames: Keyframes;\n}\n\nconst ImageBlock = styled.div<{custom: ImageBlockStyleProps}>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 500px;\n    height: 500px;\n\n    background-color: ${Palette[0][7]};\n\n    border-radius: 100%;\n\n    ${props => css`\n        animation: .7s ease-in-out ${props.custom.keyFrames} forwards;\n    `}\n\n    & > img {\n        width: 300px;\n        height: 300px;\n    }\n`;\n\nexport default MainIntroComponent;","import React from 'react';\nimport MainIntroComponent from '../components/MainIntroComponent';\n\nfunction MainIntroPage() {\n    return (\n        <MainIntroComponent />\n    );\n}\n\nexport default MainIntroPage;","import React from 'react';\nimport MainIntroPage from './pages/MainIntroPage';\n\nfunction App() {\n  return <MainIntroPage />\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}